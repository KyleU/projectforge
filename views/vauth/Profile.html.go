// Code generated by qtc from "Profile.html". DO NOT EDIT.
// See https://github.com/valyala/quicktemplate for details.

//line views/vauth/Profile.html:1
package vauth

//line views/vauth/Profile.html:1
import (
	"github.com/kyleu/projectforge/app"
	"github.com/kyleu/projectforge/app/auth"
	"github.com/kyleu/projectforge/app/controller/cutil"
	"github.com/kyleu/projectforge/app/theme"
	"github.com/kyleu/projectforge/app/user"
	"github.com/kyleu/projectforge/views/components"
	"github.com/kyleu/projectforge/views/layout"
	"github.com/kyleu/projectforge/views/vtheme"
)

//line views/vauth/Profile.html:12
import (
	qtio422016 "io"

	qt422016 "github.com/valyala/quicktemplate"
)

//line views/vauth/Profile.html:12
var (
	_ = qtio422016.Copy
	_ = qt422016.AcquireByteBuffer
)

//line views/vauth/Profile.html:12
type Profile struct {
	layout.Basic
	Profile   *user.Profile
	Theme     *theme.Theme
	Providers auth.Providers
	Referrer  string
}

//line views/vauth/Profile.html:20
func (p *Profile) StreamBody(qw422016 *qt422016.Writer, as *app.State, ps *cutil.PageState) {
//line views/vauth/Profile.html:20
	qw422016.N().S(`
  `)
//line views/vauth/Profile.html:21
	StreamSigninTable(qw422016, p.Providers, p.Referrer, as, ps)
//line views/vauth/Profile.html:21
	qw422016.N().S(`
  <form action="" method="post">
    <div class="card">
      <div class="right">
        <a href="#modal-profile"><button type="button">Profile</button></a>
        <a href="#modal-theme"><button type="button">Theme</button></a>
      </div>
      <h3>Profile</h3>
      <table class="mt">
        <tbody>
          `)
//line views/vauth/Profile.html:31
	components.StreamTableInput(qw422016, "name", "Name", p.Profile.Name, 5)
//line views/vauth/Profile.html:31
	qw422016.N().S(`
          <tr>
            <th class="shrink"><label>Mode</label></th>
            <td>
              <label>
`)
//line views/vauth/Profile.html:36
	if p.Profile.Mode == "" {
//line views/vauth/Profile.html:36
		qw422016.N().S(`                <input type="radio" class="mode-input" name="mode" value="" checked="checked" />
`)
//line views/vauth/Profile.html:38
	} else {
//line views/vauth/Profile.html:38
		qw422016.N().S(`                <input type="radio" class="mode-input" name="mode" value="" />
`)
//line views/vauth/Profile.html:40
	}
//line views/vauth/Profile.html:40
	qw422016.N().S(`                System Default
              </label>
              <label>
`)
//line views/vauth/Profile.html:44
	if p.Profile.Mode == "light" {
//line views/vauth/Profile.html:44
		qw422016.N().S(`                <input type="radio" class="mode-input" name="mode" value="light" checked="checked" />
`)
//line views/vauth/Profile.html:46
	} else {
//line views/vauth/Profile.html:46
		qw422016.N().S(`                <input type="radio" class="mode-input" name="mode" value="light" />
`)
//line views/vauth/Profile.html:48
	}
//line views/vauth/Profile.html:48
	qw422016.N().S(`                Light
              </label>
              <label>
`)
//line views/vauth/Profile.html:52
	if p.Profile.Mode == "dark" {
//line views/vauth/Profile.html:52
		qw422016.N().S(`                <input type="radio" class="mode-input" name="mode" value="dark" checked="checked" />
`)
//line views/vauth/Profile.html:54
	} else {
//line views/vauth/Profile.html:54
		qw422016.N().S(`                <input type="radio" class="mode-input" name="mode" value="dark" />
`)
//line views/vauth/Profile.html:56
	}
//line views/vauth/Profile.html:56
	qw422016.N().S(`                Dark
              </label>
            </td>
          </tr>
          <tr>
            <th class="shrink"><label>Theme</label></th>
            <td>
              <div class="right">
                <a href="/theme">Edit Themes</a>
              </div>
`)
//line views/vauth/Profile.html:68
	sel := ps.Profile.Theme
	if sel == "" {
		sel = "default"
	}

//line views/vauth/Profile.html:72
	qw422016.N().S(`              `)
//line views/vauth/Profile.html:73
	vtheme.StreamChoice(qw422016, as.Themes.All(), sel, 3, ps)
//line views/vauth/Profile.html:73
	qw422016.N().S(`
            </td>
          </tr>
        </tbody>
      </table>
      <div class="mt">
        <button type="submit">Save All Changes</button>
        <button type="reset">Reset</button>
      </div>
    </div>
  </form>

  `)
//line views/vauth/Profile.html:85
	components.StreamJSONModal(qw422016, "profile", "Profile JSON", p.Profile, 1)
//line views/vauth/Profile.html:85
	qw422016.N().S(`
  `)
//line views/vauth/Profile.html:86
	components.StreamJSONModal(qw422016, "theme", "Theme JSON", p.Theme, 1)
//line views/vauth/Profile.html:86
	qw422016.N().S(`
`)
//line views/vauth/Profile.html:87
}

//line views/vauth/Profile.html:87
func (p *Profile) WriteBody(qq422016 qtio422016.Writer, as *app.State, ps *cutil.PageState) {
//line views/vauth/Profile.html:87
	qw422016 := qt422016.AcquireWriter(qq422016)
//line views/vauth/Profile.html:87
	p.StreamBody(qw422016, as, ps)
//line views/vauth/Profile.html:87
	qt422016.ReleaseWriter(qw422016)
//line views/vauth/Profile.html:87
}

//line views/vauth/Profile.html:87
func (p *Profile) Body(as *app.State, ps *cutil.PageState) string {
//line views/vauth/Profile.html:87
	qb422016 := qt422016.AcquireByteBuffer()
//line views/vauth/Profile.html:87
	p.WriteBody(qb422016, as, ps)
//line views/vauth/Profile.html:87
	qs422016 := string(qb422016.B)
//line views/vauth/Profile.html:87
	qt422016.ReleaseByteBuffer(qb422016)
//line views/vauth/Profile.html:87
	return qs422016
//line views/vauth/Profile.html:87
}
