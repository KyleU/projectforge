// Code generated by qtc from "DepMap.html". DO NOT EDIT.
// See https://github.com/valyala/quicktemplate for details.

//line views/vbuild/DepMap.html:1
package vbuild

//line views/vbuild/DepMap.html:1
import (
	"golang.org/x/exp/maps"
	"golang.org/x/exp/slices"

	"projectforge.dev/projectforge/app"
	"projectforge.dev/projectforge/app/controller/cutil"
	"projectforge.dev/projectforge/views/components"
	"projectforge.dev/projectforge/views/layout"
)

//line views/vbuild/DepMap.html:11
import (
	qtio422016 "io"

	qt422016 "github.com/valyala/quicktemplate"
)

//line views/vbuild/DepMap.html:11
var (
	_ = qtio422016.Copy
	_ = qt422016.AcquireByteBuffer
)

//line views/vbuild/DepMap.html:11
type DepMap struct {
	layout.Basic
	Result map[string]map[string][]string
}

//line views/vbuild/DepMap.html:16
func (p *DepMap) StreamBody(qw422016 *qt422016.Writer, as *app.State, ps *cutil.PageState) {
//line views/vbuild/DepMap.html:16
	qw422016.N().S(`
  <div class="card">
    <h3>Dependency Conflicts</h3>
    <ul class="accordion mt">
`)
//line views/vbuild/DepMap.html:21
	depKeys := maps.Keys(p.Result)
	slices.Sort(depKeys)

//line views/vbuild/DepMap.html:24
	for _, k := range depKeys {
//line views/vbuild/DepMap.html:25
		v := p.Result[k]

//line views/vbuild/DepMap.html:25
		qw422016.N().S(`
      <li>
        <input id="accordion-`)
//line views/vbuild/DepMap.html:27
		qw422016.E().S(k)
//line views/vbuild/DepMap.html:27
		qw422016.N().S(`" type="checkbox" hidden />
        <label for="accordion-`)
//line views/vbuild/DepMap.html:28
		qw422016.E().S(k)
//line views/vbuild/DepMap.html:28
		qw422016.N().S(`">
          <div class="right">`)
//line views/vbuild/DepMap.html:29
		qw422016.N().D(len(v))
//line views/vbuild/DepMap.html:29
		qw422016.N().S(`</div>
          `)
//line views/vbuild/DepMap.html:30
		components.StreamExpandCollapse(qw422016, 3, ps)
//line views/vbuild/DepMap.html:30
		qw422016.N().S(` `)
//line views/vbuild/DepMap.html:30
		qw422016.E().S(k)
//line views/vbuild/DepMap.html:30
		qw422016.N().S(`
        </label>
        <div class="bd">
          <ul>
`)
//line views/vbuild/DepMap.html:34
		for vers, prjs := range v {
//line views/vbuild/DepMap.html:34
			qw422016.N().S(`            <li>`)
//line views/vbuild/DepMap.html:35
			qw422016.E().S(vers)
//line views/vbuild/DepMap.html:35
			qw422016.N().S(`:
              <ul>
`)
//line views/vbuild/DepMap.html:37
			for _, prj := range prjs {
//line views/vbuild/DepMap.html:37
				qw422016.N().S(`                <li>`)
//line views/vbuild/DepMap.html:38
				qw422016.E().S(prj)
//line views/vbuild/DepMap.html:38
				qw422016.N().S(`</li>
`)
//line views/vbuild/DepMap.html:39
			}
//line views/vbuild/DepMap.html:39
			qw422016.N().S(`              </ul>
            </li>
`)
//line views/vbuild/DepMap.html:42
		}
//line views/vbuild/DepMap.html:42
		qw422016.N().S(`          </ul>
        </div>
      </li>
`)
//line views/vbuild/DepMap.html:46
	}
//line views/vbuild/DepMap.html:46
	qw422016.N().S(`    </ul>
  </div>
`)
//line views/vbuild/DepMap.html:49
}

//line views/vbuild/DepMap.html:49
func (p *DepMap) WriteBody(qq422016 qtio422016.Writer, as *app.State, ps *cutil.PageState) {
//line views/vbuild/DepMap.html:49
	qw422016 := qt422016.AcquireWriter(qq422016)
//line views/vbuild/DepMap.html:49
	p.StreamBody(qw422016, as, ps)
//line views/vbuild/DepMap.html:49
	qt422016.ReleaseWriter(qw422016)
//line views/vbuild/DepMap.html:49
}

//line views/vbuild/DepMap.html:49
func (p *DepMap) Body(as *app.State, ps *cutil.PageState) string {
//line views/vbuild/DepMap.html:49
	qb422016 := qt422016.AcquireByteBuffer()
//line views/vbuild/DepMap.html:49
	p.WriteBody(qb422016, as, ps)
//line views/vbuild/DepMap.html:49
	qs422016 := string(qb422016.B)
//line views/vbuild/DepMap.html:49
	qt422016.ReleaseByteBuffer(qb422016)
//line views/vbuild/DepMap.html:49
	return qs422016
//line views/vbuild/DepMap.html:49
}
