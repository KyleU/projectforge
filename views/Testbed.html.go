// Code generated by qtc from "Testbed.html". DO NOT EDIT.
// See https://github.com/valyala/quicktemplate for details.

//line views/Testbed.html:1
package views

//line views/Testbed.html:1
import (
	"projectforge.dev/projectforge/app"
	"projectforge.dev/projectforge/app/controller/cutil"
	"projectforge.dev/projectforge/app/util"
	"projectforge.dev/projectforge/views/components"
	"projectforge.dev/projectforge/views/layout"
)

//line views/Testbed.html:9
import (
	qtio422016 "io"

	qt422016 "github.com/valyala/quicktemplate"
)

//line views/Testbed.html:9
var (
	_ = qtio422016.Copy
	_ = qt422016.AcquireByteBuffer
)

//line views/Testbed.html:9
type Testbed struct {
	layout.Basic
	Param any
}

//line views/Testbed.html:14
func (p *Testbed) StreamBody(qw422016 *qt422016.Writer, as *app.State, ps *cutil.PageState) {
//line views/Testbed.html:14
	qw422016.N().S(`
  <div class="card">
    <h3>`)
//line views/Testbed.html:16
	components.StreamSVGRefIcon(qw422016, `app`, ps)
//line views/Testbed.html:16
	qw422016.E().S(util.AppName)
//line views/Testbed.html:16
	qw422016.N().S(` Testbed</h3>
`)
//line views/Testbed.html:17
	if p.Param != nil {
//line views/Testbed.html:17
		qw422016.N().S(`    `)
//line views/Testbed.html:18
		components.StreamJSON(qw422016, p.Param)
//line views/Testbed.html:18
		qw422016.N().S(`
`)
//line views/Testbed.html:19
	}
//line views/Testbed.html:19
	qw422016.N().S(`  </div>
  <script>
    (async () => {
      const req = new Request("https://google.com/foo?x=1&y=2", {method: "POST", body: "HELLO!"});
      req.headers.append("Host", "google.com");
      req.headers.append("foo", "bar");

      const url = new URL(req.url);
      const host = url.host;
      const path = url.pathname;
      let query = url.searchParams.toString();
      if (query.length > 0) {
        query = '?' + query;
      }

      const ret = [`)
//line views/Testbed.html:19
	qw422016.N().S("`")
//line views/Testbed.html:19
	qw422016.N().S(`${req.method} ${path}${query} HTTP/1.1`)
//line views/Testbed.html:19
	qw422016.N().S("`")
//line views/Testbed.html:19
	qw422016.N().S(`];
      req.headers.append("Host", url.host);
      for (const x of req.headers.entries()) {
        ret.push(`)
//line views/Testbed.html:19
	qw422016.N().S("`")
//line views/Testbed.html:19
	qw422016.N().S(`${x[0]}: ${x[1]}`)
//line views/Testbed.html:19
	qw422016.N().S("`")
//line views/Testbed.html:19
	qw422016.N().S(`);
      }
      const body = await req.arrayBuffer();
      if (body.byteLength > 0) {
        ret.push("");
        var enc = new TextDecoder("utf-8");
        ret.push(enc.decode(body));
      }
      console.log(ret.join("\n"));
    })();
  </script>
`)
//line views/Testbed.html:49
}

//line views/Testbed.html:49
func (p *Testbed) WriteBody(qq422016 qtio422016.Writer, as *app.State, ps *cutil.PageState) {
//line views/Testbed.html:49
	qw422016 := qt422016.AcquireWriter(qq422016)
//line views/Testbed.html:49
	p.StreamBody(qw422016, as, ps)
//line views/Testbed.html:49
	qt422016.ReleaseWriter(qw422016)
//line views/Testbed.html:49
}

//line views/Testbed.html:49
func (p *Testbed) Body(as *app.State, ps *cutil.PageState) string {
//line views/Testbed.html:49
	qb422016 := qt422016.AcquireByteBuffer()
//line views/Testbed.html:49
	p.WriteBody(qb422016, as, ps)
//line views/Testbed.html:49
	qs422016 := string(qb422016.B)
//line views/Testbed.html:49
	qt422016.ReleaseByteBuffer(qb422016)
//line views/Testbed.html:49
	return qs422016
//line views/Testbed.html:49
}
