// Code generated by qtc from "Authentication.html". DO NOT EDIT.
// See https://github.com/valyala/quicktemplate for details.

//line views/vsettings/Authentication.html:1
package vsettings

//line views/vsettings/Authentication.html:1
import "github.com/kyleu/projectforge/app"

//line views/vsettings/Authentication.html:2
import "github.com/kyleu/projectforge/app/auth"

//line views/vsettings/Authentication.html:4
import (
	qtio422016 "io"

	qt422016 "github.com/valyala/quicktemplate"
)

//line views/vsettings/Authentication.html:4
var (
	_ = qtio422016.Copy
	_ = qt422016.AcquireByteBuffer
)

//line views/vsettings/Authentication.html:4
func StreamAuthentication(qw422016 *qt422016.Writer, as *app.State) {
//line views/vsettings/Authentication.html:4
	qw422016.N().S(`
`)
//line views/vsettings/Authentication.html:6
	prvs, err := as.Auth.Providers()
	if err != nil {
		panic(err)
	}

//line views/vsettings/Authentication.html:10
	qw422016.N().S(`  <div class="card">
    <div class="right"><a href="#modal-available"><button type="button">Available</button></a></div>
    <h3>Authentication</h3>
`)
//line views/vsettings/Authentication.html:14
	if len(prvs) == 0 {
//line views/vsettings/Authentication.html:14
		qw422016.N().S(`      <em>no authentication providers configured, why not <a href="#modal-available">add one</a>?</em>
`)
//line views/vsettings/Authentication.html:16
	} else {
//line views/vsettings/Authentication.html:16
		qw422016.N().S(`    <ul>
`)
//line views/vsettings/Authentication.html:18
		for _, prv := range prvs {
//line views/vsettings/Authentication.html:18
			qw422016.N().S(`      <li><a href="/auth/`)
//line views/vsettings/Authentication.html:19
			qw422016.E().S(prv.ID)
//line views/vsettings/Authentication.html:19
			qw422016.N().S(`?refer=`)
//line views/vsettings/Authentication.html:19
			qw422016.N().U(`/settings`)
//line views/vsettings/Authentication.html:19
			qw422016.N().S(`">`)
//line views/vsettings/Authentication.html:19
			qw422016.E().S(auth.AvailableProviderNames[prv.ID])
//line views/vsettings/Authentication.html:19
			qw422016.N().S(`</a></li>
`)
//line views/vsettings/Authentication.html:20
		}
//line views/vsettings/Authentication.html:20
		qw422016.N().S(`    </ul>
`)
//line views/vsettings/Authentication.html:22
	}
//line views/vsettings/Authentication.html:22
	qw422016.N().S(`  </div>

  <div id="modal-available" class="modal" style="display: none;">
    <a class="backdrop" href="#"></a>
    <div class="modal-content">
      <div class="modal-header">
        <a href="#" class="modal-close">Ã—</a>
        <h2>Available Authentication Providers</h2>
      </div>
      <div class="modal-body">
        <ul>
`)
//line views/vsettings/Authentication.html:34
	for _, x := range auth.AvailableProviderKeys {
//line views/vsettings/Authentication.html:34
		qw422016.N().S(`          <li title="`)
//line views/vsettings/Authentication.html:35
		qw422016.E().S(auth.ProviderUsage(x, prvs.Contains(x)))
//line views/vsettings/Authentication.html:35
		qw422016.N().S(`">
`)
//line views/vsettings/Authentication.html:36
		if prvs.Contains(x) {
//line views/vsettings/Authentication.html:36
			qw422016.N().S(`            `)
//line views/vsettings/Authentication.html:37
			qw422016.E().S(auth.AvailableProviderNames[x])
//line views/vsettings/Authentication.html:37
			qw422016.N().S(`
`)
//line views/vsettings/Authentication.html:38
		} else {
//line views/vsettings/Authentication.html:38
			qw422016.N().S(`            <em>`)
//line views/vsettings/Authentication.html:39
			qw422016.E().S(auth.AvailableProviderNames[x])
//line views/vsettings/Authentication.html:39
			qw422016.N().S(`</em>
`)
//line views/vsettings/Authentication.html:40
		}
//line views/vsettings/Authentication.html:40
		qw422016.N().S(`          </li>
`)
//line views/vsettings/Authentication.html:42
	}
//line views/vsettings/Authentication.html:42
	qw422016.N().S(`        </ul>
      </div>
    </div>
  </div>
`)
//line views/vsettings/Authentication.html:47
}

//line views/vsettings/Authentication.html:47
func WriteAuthentication(qq422016 qtio422016.Writer, as *app.State) {
//line views/vsettings/Authentication.html:47
	qw422016 := qt422016.AcquireWriter(qq422016)
//line views/vsettings/Authentication.html:47
	StreamAuthentication(qw422016, as)
//line views/vsettings/Authentication.html:47
	qt422016.ReleaseWriter(qw422016)
//line views/vsettings/Authentication.html:47
}

//line views/vsettings/Authentication.html:47
func Authentication(as *app.State) string {
//line views/vsettings/Authentication.html:47
	qb422016 := qt422016.AcquireByteBuffer()
//line views/vsettings/Authentication.html:47
	WriteAuthentication(qb422016, as)
//line views/vsettings/Authentication.html:47
	qs422016 := string(qb422016.B)
//line views/vsettings/Authentication.html:47
	qt422016.ReleaseByteBuffer(qb422016)
//line views/vsettings/Authentication.html:47
	return qs422016
//line views/vsettings/Authentication.html:47
}
