// Code generated by qtc from "Index.html". DO NOT EDIT.
// See https://github.com/valyala/quicktemplate for details.

// <!-- $PF_IGNORE$ -->

//line views/vsite/Index.html:2
package vsite

//line views/vsite/Index.html:2
import (
	"projectforge.dev/projectforge/app"
	"projectforge.dev/projectforge/app/controller/cutil"
	"projectforge.dev/projectforge/app/util"
	"projectforge.dev/projectforge/views/components"
	"projectforge.dev/projectforge/views/layout"
)

//line views/vsite/Index.html:10
import (
	qtio422016 "io"

	qt422016 "github.com/valyala/quicktemplate"
)

//line views/vsite/Index.html:10
var (
	_ = qtio422016.Copy
	_ = qt422016.AcquireByteBuffer
)

//line views/vsite/Index.html:10
type Index struct{ layout.Basic }

//line views/vsite/Index.html:12
func (p *Index) StreamBody(qw422016 *qt422016.Writer, as *app.State, ps *cutil.PageState) {
//line views/vsite/Index.html:12
	qw422016.N().S(`
  <div class="card">
    <h3>`)
//line views/vsite/Index.html:14
	components.StreamSVGRefIcon(qw422016, `app`, ps)
//line views/vsite/Index.html:14
	qw422016.E().S(util.AppName)
//line views/vsite/Index.html:14
	qw422016.N().S(`</h3>

    <div class="mt">
      <a href="/download"><button>`)
//line views/vsite/Index.html:17
	components.StreamSVGRef(qw422016, "download", 15, 15, "icon", ps)
//line views/vsite/Index.html:17
	qw422016.N().S(`Download</button></a>
      <a href="https://github.com/kyleu/projectforge"><button>`)
//line views/vsite/Index.html:18
	components.StreamSVGRef(qw422016, "git", 15, 15, "icon", ps)
//line views/vsite/Index.html:18
	qw422016.N().S(`Source Code</button></a>
    </div>
    `)
//line views/vsite/Index.html:20
	components.StreamBragApp(qw422016)
//line views/vsite/Index.html:20
	qw422016.N().S(`
  </div>
  <div class="card">
    <h3>Examples</h3>
    <ul>
      <li><a href="https://github.com/kyleu/rituals.dev/tree/projectforge" target="_blank">Rituals.dev</a>: Work with your team to estimate work, track your progress, and gather feedback.</li>
      <li><a href="https://github.com/kyleu/admini" target="_blank">Admini</a>: A database management application, basically. It does other stuff too.</li>
      <li><em>More examples coming soon...</em></li>
    </ul>
  </div>
  `)
//line views/vsite/Index.html:30
	components.StreamBragProject(qw422016)
//line views/vsite/Index.html:30
	qw422016.N().S(`
  <div class="card">
    <h3>Licensing</h3>
    <div class="mt">
      `)
//line views/vsite/Index.html:34
	qw422016.E().S(util.AppName)
//line views/vsite/Index.html:34
	qw422016.N().S(` is <a href="https://choosealicense.com/licenses/mit/">MIT</a> licensed,
      and the modules are <a href="https://creativecommons.org/publicdomain/zero/1.0/">CC0</a>.
    </div>
    <div class="mt">Your project is your own, use any license you'd like.</div>
  </div>
`)
//line views/vsite/Index.html:39
}

//line views/vsite/Index.html:39
func (p *Index) WriteBody(qq422016 qtio422016.Writer, as *app.State, ps *cutil.PageState) {
//line views/vsite/Index.html:39
	qw422016 := qt422016.AcquireWriter(qq422016)
//line views/vsite/Index.html:39
	p.StreamBody(qw422016, as, ps)
//line views/vsite/Index.html:39
	qt422016.ReleaseWriter(qw422016)
//line views/vsite/Index.html:39
}

//line views/vsite/Index.html:39
func (p *Index) Body(as *app.State, ps *cutil.PageState) string {
//line views/vsite/Index.html:39
	qb422016 := qt422016.AcquireByteBuffer()
//line views/vsite/Index.html:39
	p.WriteBody(qb422016, as, ps)
//line views/vsite/Index.html:39
	qs422016 := string(qb422016.B)
//line views/vsite/Index.html:39
	qt422016.ReleaseByteBuffer(qb422016)
//line views/vsite/Index.html:39
	return qs422016
//line views/vsite/Index.html:39
}
