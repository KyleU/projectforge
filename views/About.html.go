// Code generated by qtc from "About.html". DO NOT EDIT.
// See https://github.com/valyala/quicktemplate for details.

//line views/About.html:1
package views

//line views/About.html:1
import (
	"time"

	"projectforge.dev/projectforge/app"
	"projectforge.dev/projectforge/app/controller/cutil"
	"projectforge.dev/projectforge/app/util"
	"projectforge.dev/projectforge/views/components"
	"projectforge.dev/projectforge/views/components/view"
	"projectforge.dev/projectforge/views/layout"
)

//line views/About.html:12
import (
	qtio422016 "io"

	qt422016 "github.com/valyala/quicktemplate"
)

//line views/About.html:12
var (
	_ = qtio422016.Copy
	_ = qt422016.AcquireByteBuffer
)

//line views/About.html:12
type About struct {
	layout.Basic
	Version string
	Started time.Time
}

//line views/About.html:18
func (p *About) StreamBody(qw422016 *qt422016.Writer, as *app.State, ps *cutil.PageState) {
//line views/About.html:18
	qw422016.N().S(`
  <div class="card">
    <h3>`)
//line views/About.html:20
	components.StreamSVGIcon(qw422016, `app`, ps)
//line views/About.html:20
	qw422016.N().S(` `)
//line views/About.html:20
	qw422016.E().S(util.AppName)
//line views/About.html:20
	qw422016.N().S(`</h3>
    <em>v`)
//line views/About.html:21
	qw422016.E().S(p.Version)
//line views/About.html:21
	qw422016.N().S(`, started `)
//line views/About.html:21
	view.StreamTimestampRelative(qw422016, &p.Started, false)
//line views/About.html:21
	qw422016.N().S(`</em>
  </div>
  <div class="card">
    <h3>About</h3>
    <p>Using code generation, the latest technology, and a strong standard library, Project Forge will help manage your project's code, assets, UI and UX.</p>
    `)
//line views/About.html:26
	components.StreamBragApp(qw422016)
//line views/About.html:26
	qw422016.N().S(`
  </div>
  <div class="card">
    <h3>Help</h3>
    Pages with help files, like this one, have a <a href="#help">link</a> in the upper-right.
  </div>
  `)
//line views/About.html:32
	components.StreamBragProject(qw422016)
//line views/About.html:32
	qw422016.N().S(`
  <div class="card">
    <h3>Licensing</h3>
    <div class="mt">
      `)
//line views/About.html:36
	qw422016.E().S(util.AppName)
//line views/About.html:36
	qw422016.N().S(` is <a href="https://choosealicense.com/licenses/mit/">MIT</a> licensed,
      and the modules are <a href="https://creativecommons.org/publicdomain/zero/1.0/">CC0</a>.
    </div>
    <div class="mt">Your project is your own, use any license you'd like.</div>
  </div>
  `)
//line views/About.html:41
	StreamSourceCode(qw422016, ps)
//line views/About.html:41
	qw422016.N().S(`
  `)
//line views/About.html:42
	StreamFeedback(qw422016)
//line views/About.html:42
	qw422016.N().S(`
`)
//line views/About.html:43
}

//line views/About.html:43
func (p *About) WriteBody(qq422016 qtio422016.Writer, as *app.State, ps *cutil.PageState) {
//line views/About.html:43
	qw422016 := qt422016.AcquireWriter(qq422016)
//line views/About.html:43
	p.StreamBody(qw422016, as, ps)
//line views/About.html:43
	qt422016.ReleaseWriter(qw422016)
//line views/About.html:43
}

//line views/About.html:43
func (p *About) Body(as *app.State, ps *cutil.PageState) string {
//line views/About.html:43
	qb422016 := qt422016.AcquireByteBuffer()
//line views/About.html:43
	p.WriteBody(qb422016, as, ps)
//line views/About.html:43
	qs422016 := string(qb422016.B)
//line views/About.html:43
	qt422016.ReleaseByteBuffer(qb422016)
//line views/About.html:43
	return qs422016
//line views/About.html:43
}

//line views/About.html:45
func StreamSourceCode(qw422016 *qt422016.Writer, ps *cutil.PageState) {
//line views/About.html:45
	qw422016.N().S(`
  <div class="card">
    <h3>Source Code</h3>
    <p>The project is available on `)
//line views/About.html:48
	view.StreamURL(qw422016, util.AppSource, "GitHub", true, ps)
//line views/About.html:48
	qw422016.N().S(`</p>
  </div>
`)
//line views/About.html:50
}

//line views/About.html:50
func WriteSourceCode(qq422016 qtio422016.Writer, ps *cutil.PageState) {
//line views/About.html:50
	qw422016 := qt422016.AcquireWriter(qq422016)
//line views/About.html:50
	StreamSourceCode(qw422016, ps)
//line views/About.html:50
	qt422016.ReleaseWriter(qw422016)
//line views/About.html:50
}

//line views/About.html:50
func SourceCode(ps *cutil.PageState) string {
//line views/About.html:50
	qb422016 := qt422016.AcquireByteBuffer()
//line views/About.html:50
	WriteSourceCode(qb422016, ps)
//line views/About.html:50
	qs422016 := string(qb422016.B)
//line views/About.html:50
	qt422016.ReleaseByteBuffer(qb422016)
//line views/About.html:50
	return qs422016
//line views/About.html:50
}

//line views/About.html:52
func StreamFeedback(qw422016 *qt422016.Writer) {
//line views/About.html:52
	qw422016.N().S(`
  <div class="card">
    <h3>Feedback</h3>
    <p>For now, email <a href="mailto:projectforge@kyleu.com">Kyle U</a></p>
  </div>
`)
//line views/About.html:57
}

//line views/About.html:57
func WriteFeedback(qq422016 qtio422016.Writer) {
//line views/About.html:57
	qw422016 := qt422016.AcquireWriter(qq422016)
//line views/About.html:57
	StreamFeedback(qw422016)
//line views/About.html:57
	qt422016.ReleaseWriter(qw422016)
//line views/About.html:57
}

//line views/About.html:57
func Feedback() string {
//line views/About.html:57
	qb422016 := qt422016.AcquireByteBuffer()
//line views/About.html:57
	WriteFeedback(qb422016)
//line views/About.html:57
	qs422016 := string(qb422016.B)
//line views/About.html:57
	qt422016.ReleaseByteBuffer(qb422016)
//line views/About.html:57
	return qs422016
//line views/About.html:57
}
