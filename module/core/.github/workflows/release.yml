name: release
{{{ .CIContent }}}
permissions:
  contents: write
jobs:{{{ if .Build.TestsFail }}}
  test:
    uses: "{{{ .Info.Org }}}/{{{ .Key }}}/.github/workflows/test.yml@master"{{{ end }}}
  build:
    runs-on: "ubuntu-latest"
    steps:{{{ if .HasSlack }}}
      - name: "Slack"
        uses: ravsamhq/notify-slack-action@v1
        if: always()
        with:
          status: ${{ job.status }}
          notify_when: 'failure'
        env:
          SLACK_WEBHOOK_URL: "{{{ .Info.Slack }}}"{{{ end }}}
      - name: "Checkout"
        uses: "actions/checkout@v2"
        with:
          fetch-depth: 0
      - name: "Golang"
        uses: "actions/setup-go@v2"
        with:
          go-version: "{{{ .GoVersionSafe }}}"
      - name: "Login"
        uses: "docker/login-action@v1"
        with:
          registry: "ghcr.io"
          username: "${{ github.repository_owner }}"
          password: "${{ secrets.CR_PAT }}"
      - name: "Cache"
        uses: "actions/cache@v2"
        with:
          path: "~/go/pkg/mod"
          key: "${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}"
          restore-keys: |
            ${{ runner.os }}-go-
      - name: "Dependencies"
        run: "bin/bootstrap.sh"{{{ if .Build.Snapcraft }}}
      - name: "Snapcraft"
        run: "sudo snap install snapcraft --classic"
      - name: "Snapcraft Fix"
        run: "mkdir -p /home/runner/.cache/snapcraft/download; mkdir -p /home/runner/.cache/snapcraft/stage-packages"{{{ end }}}{{{ if .Build.NFPMS }}}
      - name: "nfpms"
        run: "go install github.com/goreleaser/nfpm/v2/cmd/nfpm@latest"{{{ end }}}
      - name: "Config"
        env:
          OWNER: "${{ github.repository_owner }}"
          TOKEN: "${{ secrets.CR_PAT }}"
        run: "git config --global url.\"https://${OWNER}:${TOKEN}@github.com\".insteadOf \"https://github.com\""
      - name: "Templates"
        run: "bin/templates.sh"
      - name: "Modules"
        run: "go mod download"
        env:
          GOPRIVATE: "github.com/${{ github.repository_owner }}"
          GITHUB_TOKEN: "${{ secrets.CR_PAT }}"
          OWNER: "${{ github.repository_owner }}"
          TOKEN: "${{ secrets.CR_PAT }}"
      - name: "Release"
        uses: "goreleaser/goreleaser-action@v2"
        with:
          distribution: "goreleaser"
          version: "latest"
          args: "-f ./tools/release/.goreleaser.yml release --rm-dist"
        env:{{{ if .HasSlack }}}
          SLACK_WEBHOOK: "{{{ .Info.Slack }}}"{{{ end }}}
          GOPRIVATE: "github.com/${{ github.repository_owner }}"
          GITHUB_TOKEN: "${{ secrets.CR_PAT }}"{{{ if .Build.Homebrew }}}
          HOMEBREW_GITHUB_API_TOKEN: "${{ secrets.CR_PAT }}"{{{ end }}}
          OWNER: "${{ github.repository_owner }}"
          TOKEN: "${{ secrets.CR_PAT }}"
