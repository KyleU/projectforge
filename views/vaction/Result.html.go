// Code generated by qtc from "Result.html". DO NOT EDIT.
// See https://github.com/valyala/quicktemplate for details.

//line views/vaction/Result.html:1
package vaction

//line views/vaction/Result.html:1
import "github.com/kyleu/projectforge/app"

//line views/vaction/Result.html:2
import "github.com/kyleu/projectforge/app/controller/cutil"

//line views/vaction/Result.html:3
import "github.com/kyleu/projectforge/app/action"

//line views/vaction/Result.html:4
import "github.com/kyleu/projectforge/app/util"

//line views/vaction/Result.html:5
import "github.com/kyleu/projectforge/views/components"

//line views/vaction/Result.html:6
import "github.com/kyleu/projectforge/views/layout"

//line views/vaction/Result.html:8
import (
	qtio422016 "io"

	qt422016 "github.com/valyala/quicktemplate"
)

//line views/vaction/Result.html:8
var (
	_ = qtio422016.Copy
	_ = qt422016.AcquireByteBuffer
)

//line views/vaction/Result.html:8
type Result struct {
	layout.Basic
	Cfg    util.ValueMap
	Result *action.Result
}

//line views/vaction/Result.html:14
func (p *Result) StreamBody(qw422016 *qt422016.Writer, as *app.State, ps *cutil.PageState) {
//line views/vaction/Result.html:14
	qw422016.N().S(`
  <div class="card">
    <div class="right">
      <a href="#modal-cfg"><button type="button">Config</button></a>
      <a href="#modal-result"><button type="button">Result</button></a>
    </div>
    <h3>Result</h3>
    <p>`)
//line views/vaction/Result.html:21
	qw422016.E().S(p.Result.Status)
//line views/vaction/Result.html:21
	qw422016.N().S(`</p>
  </div>

  <div class="card">
    <h3>Config</h3>
    <table>
      <tbody>
`)
//line views/vaction/Result.html:28
	for _, k := range p.Cfg.Keys() {
//line views/vaction/Result.html:28
		qw422016.N().S(`        <tr>
          <td>`)
//line views/vaction/Result.html:30
		qw422016.E().S(k)
//line views/vaction/Result.html:30
		qw422016.N().S(`</td>
          <td>`)
//line views/vaction/Result.html:31
		qw422016.E().V(p.Cfg[k])
//line views/vaction/Result.html:31
		qw422016.N().S(`</td>
        </tr>
`)
//line views/vaction/Result.html:33
	}
//line views/vaction/Result.html:33
	qw422016.N().S(`      </tbody>
    </table>
  </div>

  <div class="card">
    <h3>Errors</h3>
`)
//line views/vaction/Result.html:40
	if len(p.Result.Errors) == 0 {
//line views/vaction/Result.html:40
		qw422016.N().S(`    <p>no errors</p>
`)
//line views/vaction/Result.html:42
	} else {
//line views/vaction/Result.html:42
		qw422016.N().S(`    <table>
      <tbody>
`)
//line views/vaction/Result.html:45
		for _, e := range p.Result.Errors {
//line views/vaction/Result.html:45
			qw422016.N().S(`        <tr>
          <td>`)
//line views/vaction/Result.html:47
			qw422016.E().S(e)
//line views/vaction/Result.html:47
			qw422016.N().S(`</td>
        </tr>
`)
//line views/vaction/Result.html:49
		}
//line views/vaction/Result.html:49
		qw422016.N().S(`      </tbody>
    </table>
`)
//line views/vaction/Result.html:52
	}
//line views/vaction/Result.html:52
	qw422016.N().S(`  </div>

  <div class="card">
    <h3>Logs</h3>
`)
//line views/vaction/Result.html:57
	if len(p.Result.Logs) == 0 {
//line views/vaction/Result.html:57
		qw422016.N().S(`    <p>no logs</p>
`)
//line views/vaction/Result.html:59
	} else {
//line views/vaction/Result.html:59
		qw422016.N().S(`    <table>
      <tbody>
`)
//line views/vaction/Result.html:62
		for _, l := range p.Result.Logs {
//line views/vaction/Result.html:62
			qw422016.N().S(`        <tr>
          <td><pre>`)
//line views/vaction/Result.html:64
			qw422016.E().S(l)
//line views/vaction/Result.html:64
			qw422016.N().S(`</pre></td>
        </tr>
`)
//line views/vaction/Result.html:66
		}
//line views/vaction/Result.html:66
		qw422016.N().S(`      </tbody>
    </table>
`)
//line views/vaction/Result.html:69
	}
//line views/vaction/Result.html:69
	qw422016.N().S(`  </div>

`)
//line views/vaction/Result.html:72
	for _, mr := range p.Result.Modules {
//line views/vaction/Result.html:72
		qw422016.N().S(`    <div class="card">
      <div class="right">`)
//line views/vaction/Result.html:74
		qw422016.E().S(mr.Status)
//line views/vaction/Result.html:74
		qw422016.N().S(`</div>
      <h3>Module [`)
//line views/vaction/Result.html:75
		qw422016.E().S(mr.Key)
//line views/vaction/Result.html:75
		qw422016.N().S(`]</h3>
      <h4>Diffs</h4>
      <table>
        <thead>
          <tr>
            <th>Path</th>
            <th>Status</th>
            <th>Patch</th>
          </tr>
        </thead>
        <tbody>
`)
//line views/vaction/Result.html:86
		for _, diff := range mr.Diffs {
//line views/vaction/Result.html:86
			qw422016.N().S(`          <tr>
            <td>`)
//line views/vaction/Result.html:88
			qw422016.E().S(diff.Path)
//line views/vaction/Result.html:88
			qw422016.N().S(`</td>
            <td>`)
//line views/vaction/Result.html:89
			qw422016.E().S(diff.Status)
//line views/vaction/Result.html:89
			qw422016.N().S(`</td>
            <td><pre>`)
//line views/vaction/Result.html:90
			qw422016.N().S(diff.Patch)
//line views/vaction/Result.html:90
			qw422016.N().S(`</pre></td>
          </tr>
`)
//line views/vaction/Result.html:92
		}
//line views/vaction/Result.html:92
		qw422016.N().S(`        </tbody>
      </table>
    </div>
`)
//line views/vaction/Result.html:96
	}
//line views/vaction/Result.html:96
	qw422016.N().S(`
  `)
//line views/vaction/Result.html:98
	components.StreamJSONModal(qw422016, "cfg", "Config JSON", p.Cfg, 1)
//line views/vaction/Result.html:98
	qw422016.N().S(`
  `)
//line views/vaction/Result.html:99
	components.StreamJSONModal(qw422016, "result", "Result JSON", p.Result, 1)
//line views/vaction/Result.html:99
	qw422016.N().S(`
`)
//line views/vaction/Result.html:100
}

//line views/vaction/Result.html:100
func (p *Result) WriteBody(qq422016 qtio422016.Writer, as *app.State, ps *cutil.PageState) {
//line views/vaction/Result.html:100
	qw422016 := qt422016.AcquireWriter(qq422016)
//line views/vaction/Result.html:100
	p.StreamBody(qw422016, as, ps)
//line views/vaction/Result.html:100
	qt422016.ReleaseWriter(qw422016)
//line views/vaction/Result.html:100
}

//line views/vaction/Result.html:100
func (p *Result) Body(as *app.State, ps *cutil.PageState) string {
//line views/vaction/Result.html:100
	qb422016 := qt422016.AcquireByteBuffer()
//line views/vaction/Result.html:100
	p.WriteBody(qb422016, as, ps)
//line views/vaction/Result.html:100
	qs422016 := string(qb422016.B)
//line views/vaction/Result.html:100
	qt422016.ReleaseByteBuffer(qb422016)
//line views/vaction/Result.html:100
	return qs422016
//line views/vaction/Result.html:100
}
