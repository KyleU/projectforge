// Package controller $PF_IGNORE$
// Code generated by Project Forge, see https://projectforge.dev for details.
package controller

import (
	"context"

	"github.com/kyleu/projectforge/app"
	"github.com/kyleu/projectforge/app/action"
	"github.com/kyleu/projectforge/app/menu"
	"github.com/kyleu/projectforge/app/module"
	"github.com/kyleu/projectforge/app/project"
	"github.com/kyleu/projectforge/app/sandbox"
	"github.com/kyleu/projectforge/app/util"
)

func MenuFor(ctx context.Context, as *app.State) (menu.Items, error) {
	return menu.Items{
		projectMenu(as.Services.Projects.Projects()),
		menu.Separator,
		moduleMenu(as.Services.Modules.Modules()),
		menu.Separator,
		sandbox.Menu(),
		menu.Separator,
		&menu.Item{Key: "settings", Title: "Settings", Description: "System-wide settings and preferences", Icon: "cog", Route: "/settings"},
		itemFor(action.TypeDoctor, "first-aid", "/doctor"),
		&menu.Item{Key: "about", Title: "About", Description: "Get assistance and advice for using " + util.AppName, Icon: "question", Route: "/about"},
	}, nil
}

func itemFor(t action.Type, i string, r string) *menu.Item {
	return &menu.Item{Key: t.Key, Title: t.Title, Description: t.Description, Icon: i, Route: r}
}

func projectMenu(prjs project.Projects) *menu.Item {
	ret := &menu.Item{Key: "projects", Title: "Projects", Description: "View all of the projects managed by this application", Icon: "star", Route: "/p"}
	for _, prj := range prjs {
		key := prj.Key
		i := &menu.Item{Key: key, Title: prj.Title(), Icon: "star", Route: "/p/" + prj.Key}
		ret.Children = append(ret.Children, i)
	}
	return ret
}

func moduleMenu(mods module.Modules) *menu.Item {
	ret := &menu.Item{Key: "modules", Title: "Modules", Description: "View all of the modules managed by this application", Icon: "star", Route: "/m"}
	for _, prj := range mods {
		key := prj.Key
		i := &menu.Item{Key: key, Title: prj.Name, Icon: "star", Route: "/m/" + prj.Key}
		ret.Children = append(ret.Children, i)
	}
	return ret
}
