// Code generated by qtc from "DepMap.html". DO NOT EDIT.
// See https://github.com/valyala/quicktemplate for details.

//line views/vbuild/DepMap.html:1
package vbuild

//line views/vbuild/DepMap.html:1
import (
	"golang.org/x/exp/maps"
	"golang.org/x/exp/slices"

	"projectforge.dev/projectforge/app"
	"projectforge.dev/projectforge/app/controller/cutil"
	"projectforge.dev/projectforge/views/components"
	"projectforge.dev/projectforge/views/layout"
	"projectforge.dev/projectforge/views/vproject"
)

//line views/vbuild/DepMap.html:12
import (
	qtio422016 "io"

	qt422016 "github.com/valyala/quicktemplate"
)

//line views/vbuild/DepMap.html:12
var (
	_ = qtio422016.Copy
	_ = qt422016.AcquireByteBuffer
)

//line views/vbuild/DepMap.html:12
type DepMap struct {
	layout.Basic
	Message string
	Result  map[string]map[string][]string
	Tags    []string
}

//line views/vbuild/DepMap.html:19
func (p *DepMap) StreamBody(qw422016 *qt422016.Writer, as *app.State, ps *cutil.PageState) {
//line views/vbuild/DepMap.html:19
	qw422016.N().S(`
  <div class="card">
    `)
//line views/vbuild/DepMap.html:21
	vproject.StreamAvailActions(qw422016, "Dependency Conflicts", p.Tags, nil, ps)
//line views/vbuild/DepMap.html:21
	qw422016.N().S(`
  </div>
  <div class="card">
`)
//line views/vbuild/DepMap.html:24
	if p.Message != "" {
//line views/vbuild/DepMap.html:24
		qw422016.N().S(`    <h4 class="mt mb">`)
//line views/vbuild/DepMap.html:25
		qw422016.E().S(p.Message)
//line views/vbuild/DepMap.html:25
		qw422016.N().S(`</h4>
`)
//line views/vbuild/DepMap.html:26
	}
//line views/vbuild/DepMap.html:27
	if len(p.Result) == 0 {
//line views/vbuild/DepMap.html:27
		qw422016.N().S(`    <div class="mt"><em>No dependency conflicts, nice work!</em></div>
`)
//line views/vbuild/DepMap.html:29
	}
//line views/vbuild/DepMap.html:29
	qw422016.N().S(`    <div class="mt">
      <ul class="accordion">
`)
//line views/vbuild/DepMap.html:33
	depKeys := maps.Keys(p.Result)
	slices.Sort(depKeys)

//line views/vbuild/DepMap.html:36
	for _, k := range depKeys {
//line views/vbuild/DepMap.html:37
		v := p.Result[k]

//line views/vbuild/DepMap.html:37
		qw422016.N().S(`
        <li>
          <input id="accordion-`)
//line views/vbuild/DepMap.html:39
		qw422016.E().S(k)
//line views/vbuild/DepMap.html:39
		qw422016.N().S(`" type="checkbox" hidden />
          <label for="accordion-`)
//line views/vbuild/DepMap.html:40
		qw422016.E().S(k)
//line views/vbuild/DepMap.html:40
		qw422016.N().S(`">
            <div class="right">`)
//line views/vbuild/DepMap.html:41
		qw422016.N().D(len(v))
//line views/vbuild/DepMap.html:41
		qw422016.N().S(`</div>
            `)
//line views/vbuild/DepMap.html:42
		components.StreamExpandCollapse(qw422016, 3, ps)
//line views/vbuild/DepMap.html:42
		qw422016.N().S(` `)
//line views/vbuild/DepMap.html:42
		qw422016.E().S(k)
//line views/vbuild/DepMap.html:42
		qw422016.N().S(`
          </label>
          <div class="bd">
            <ul>
`)
//line views/vbuild/DepMap.html:47
		vKeys := maps.Keys(v)
		slices.Sort(vKeys)

//line views/vbuild/DepMap.html:50
		for i := len(vKeys) - 1; i >= 0; i-- {
//line views/vbuild/DepMap.html:51
			vers := vKeys[i]

//line views/vbuild/DepMap.html:51
			qw422016.N().S(`              <li><a href="?phase=deps&key=`)
//line views/vbuild/DepMap.html:52
			qw422016.N().U(k)
//line views/vbuild/DepMap.html:52
			qw422016.N().S(`&version=`)
//line views/vbuild/DepMap.html:52
			qw422016.N().U(vers)
//line views/vbuild/DepMap.html:52
			qw422016.N().S(`">`)
//line views/vbuild/DepMap.html:52
			qw422016.E().S(vers)
//line views/vbuild/DepMap.html:52
			qw422016.N().S(`</a>:
                <ul>
`)
//line views/vbuild/DepMap.html:54
			for _, prj := range v[vers] {
//line views/vbuild/DepMap.html:54
				qw422016.N().S(`                  <li><a href="/p/`)
//line views/vbuild/DepMap.html:55
				qw422016.E().S(prj)
//line views/vbuild/DepMap.html:55
				qw422016.N().S(`">`)
//line views/vbuild/DepMap.html:55
				qw422016.E().S(prj)
//line views/vbuild/DepMap.html:55
				qw422016.N().S(`</a></li>
`)
//line views/vbuild/DepMap.html:56
			}
//line views/vbuild/DepMap.html:56
			qw422016.N().S(`                </ul>
              </li>
`)
//line views/vbuild/DepMap.html:59
		}
//line views/vbuild/DepMap.html:59
		qw422016.N().S(`            </ul>
          </div>
        </li>
`)
//line views/vbuild/DepMap.html:63
	}
//line views/vbuild/DepMap.html:63
	qw422016.N().S(`      </ul>
    </div>
  </div>
`)
//line views/vbuild/DepMap.html:67
}

//line views/vbuild/DepMap.html:67
func (p *DepMap) WriteBody(qq422016 qtio422016.Writer, as *app.State, ps *cutil.PageState) {
//line views/vbuild/DepMap.html:67
	qw422016 := qt422016.AcquireWriter(qq422016)
//line views/vbuild/DepMap.html:67
	p.StreamBody(qw422016, as, ps)
//line views/vbuild/DepMap.html:67
	qt422016.ReleaseWriter(qw422016)
//line views/vbuild/DepMap.html:67
}

//line views/vbuild/DepMap.html:67
func (p *DepMap) Body(as *app.State, ps *cutil.PageState) string {
//line views/vbuild/DepMap.html:67
	qb422016 := qt422016.AcquireByteBuffer()
//line views/vbuild/DepMap.html:67
	p.WriteBody(qb422016, as, ps)
//line views/vbuild/DepMap.html:67
	qs422016 := string(qb422016.B)
//line views/vbuild/DepMap.html:67
	qt422016.ReleaseByteBuffer(qb422016)
//line views/vbuild/DepMap.html:67
	return qs422016
//line views/vbuild/DepMap.html:67
}
