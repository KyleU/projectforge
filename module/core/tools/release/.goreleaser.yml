# http://goreleaser.com
project_name: {{{ .Key }}}
{{{ if .HasSlack }}}
announce:
  slack:
    enabled: true
    message_template: "*{{{ .Name }}}* `{{ .Tag }}` has been released from the `{{ .Branch }}` branch at commit `{{ .ShortCommit }}` ({{ .CommitDate }})\n{{{ .Info.Sourcecode }}}/releases/tag/{{ .Tag }}\n\n{{ .ReleaseNotes }}"
{{{ end }}}
archives:
  - format: zip
    wrap_in_directory: "false"
    files:
      - none*
{{{ if .Build.Homebrew }}}
brews:
  -
    repository:
      owner: "{{{ .Info.Org }}}"
      name: "homebrew-{{{ .Info.Org }}}"
    commit_author:
      name: "{{{ .Info.AuthorName }}}"
      email: "{{{ .Info.AuthorEmail }}}"
    folder: Formula
    homepage: "{{{ .Info.Homepage }}}"
    description: "{{{ .Info.Description }}}"
    license: "{{{ .Info.License }}}"
    skip_upload: "false"{{{ if .Build.Private }}}
    download_strategy: "GitHubPrivateRepositoryReleaseDownloadStrategy"
    custom_require: "lib/private_strategy"{{{ end }}}{{{ if .Info.Homebrew }}}
    url_template: "{{{ .Info.Homebrew }}}/{{ .Tag }}/{{ .ArtifactName }}"{{{ end }}}
    install: "bin.install \"{{{ .Exec }}}\""
{{{ end }}}
changelog:{{{ if .Build.Changelog }}}
  use: "github"
  filters:
    exclude:
      - "^V2:"{{{ else }}}
  skip: true{{{ end }}}

checksum:
  name_template: "checksums.txt"
  extra_files:{{{ if .BuildNotarize }}}
    - glob: "./build/dist/*_notarized.zip"{{{ end }}}{{{ if .BuildDesktop }}}
    - glob: "./build/dist/*_desktop.dmg"
    - glob: "./build/dist/*_desktop.zip"{{{ end }}}{{{ if .BuildAndroid }}}
    - glob: "./build/dist/*_aar.zip"
    - glob: "./build/dist/*_apk.zip"{{{ end }}}{{{ if .BuildIOS }}}
    - glob: "./build/dist/*_framework.zip"
    - glob: "./build/dist/*_app.zip"{{{ end }}}
    # $PF_SECTION_START(checksums)$
    # $PF_SECTION_END(checksums)$

dockers:
  -
    image_templates:
      - "ghcr.io/{{{ .Info.Org }}}/{{{ .Key }}}:{{ trimprefix .Tag \"v\" }}"
      - "ghcr.io/{{{ .Info.Org }}}/{{{ .Key }}}:latest"
    dockerfile: ./tools/release/Dockerfile.release{{{ .ExtraFilesContent }}}{{{ if .Build.Simple }}}{{{ else }}}
  -
    image_templates:
      - "ghcr.io/{{{ .Info.Org }}}/{{{ .Key }}}:{{ trimprefix .Tag \"v\" }}-debug"
      - "ghcr.io/{{{ .Info.Org }}}/{{{ .Key }}}:latest-debug"
    dockerfile: ./tools/release/Dockerfile.debug{{{ .ExtraFilesContent }}}{{{ end }}}

dist: "build/dist"
{{{ if .Build.NFPMS }}}
nfpms:
  -
    vendor: "{{{ .Info.AuthorName }}}"
    homepage: "{{{ .Info.Homepage }}}}"
    maintainer: "{{{ .Info.AuthorName }}} <{{{ .Info.AuthorEmail }}}>"
    description: "{{{ .Info.Description }}}"
    license: "{{{ .Info.License }}}"
    formats:
      - apk
      - deb
      - rpm
{{{ end }}}
release:
  draft: {{{ if .Build.Publish }}}false{{{ else }}}true{{{ end }}}
  header: |
    ## {{ .Version }} ({{ .Date }})
    See {{{ .Info.Homepage }}} for download links and documentation
    ## Main downloads
    - [Linux Intel 64 bit]({{{ .Info.Sourcecode }}}/releases/download/{{ .Tag }}/{{{ .Key }}}_{{ .Version }}_linux_amd64.zip)
    - [MacOS Universal]({{{ .Info.Sourcecode }}}/releases/download/{{ .Tag }}/{{{ .Key }}}_{{ .Version }}_darwin_all.zip)
    - [Windows Intel 64 bit]({{{ .Info.Sourcecode }}}/releases/download/{{ .Tag }}/{{{ .Key }}}_{{ .Version }}_windows_amd64.zip)

  extra_files:{{{ if .BuildNotarize }}}
    - glob: "./build/dist/*_notarized.zip"{{{ end }}}{{{ if .BuildDesktop }}}
    - glob: "./build/dist/*.dmg"
    - glob: "./build/dist/*_desktop.zip"{{{ end }}}{{{ if .BuildAndroid }}}
    - glob: "./build/dist/*_aar.zip"
    - glob: "./build/dist/*_apk.zip"{{{ end }}}{{{ if .BuildIOS }}}
    - glob: "./build/dist/*_framework.zip"
    - glob: "./build/dist/*_app.zip"{{{ end }}}
    # $PF_SECTION_START(releasefiles)$
    # $PF_SECTION_END(releasefiles)$
{{{ if .Build.BOM }}}
sboms:
  - artifacts: archive
{{{ end }}}{{{ if .Build.Signing }}}
signs:
  - artifacts: checksum
{{{ end }}}{{{ if .Build.Snapcraft }}}
snapcrafts:
  -
    publish: false
    summary: "{{{ .Info.Summary }}}"
    description: "{{{ .Info.Description }}}"
    grade: stable
    confinement: strict
    license: "{{{ .Info.License }}}"
{{{ end }}}
snapshot:
  name_template: "{{ .Tag }}"

source:
  enabled: true
  name_template: "{{ .ProjectName }}_{{ .Version }}_source"
  format: "zip"{{{ if .Build.Simple }}}{{{ else }}}

universal_binaries:
- id: "darwin"
  replace: false
  name_template: '{{ .ProjectName }}'
  hooks:
    # This is a good place to put one-time use scripts
    post:{{{ if .BuildAndroid }}}
      - "./bin/build/android.sh {{ .Version }}"{{{ end }}}{{{ if .BuildIOS }}}
      - "./bin/build/ios.sh {{ .Version }}"{{{ end }}}{{{ if .BuildDesktop }}}
      - "./bin/build/desktop.release.sh {{ .Version }}"{{{ end }}}{{{ if .BuildNotarize }}}
      - "./tools/notarize/notarize.sh"{{{ end }}}
      # $PF_SECTION_START(extrascripts)$
      # $PF_SECTION_END(extrascripts)${{{ end }}}
{{{ if .Build.Simple }}}
builds:
  - id: "linux"
    goos:
      - "linux"
    goarch:
      - "amd64"
    mod_timestamp: "{{ .CommitTimestamp }}"{{{ .GoBinaryContent }}}
    # $PF_SECTION_START(simplescripts)$
    # $PF_SECTION_END(simplescripts)$
{{{ else }}}
builds:
  - id: "darwin"
    goos:
      - darwin
    goarch:
      - "amd64"
      - "arm64"
    mod_timestamp: "{{ .CommitTimestamp }}"{{{ .GoBinaryContent }}}

  - id: "linux"
    goos:
      - "linux"
    goarch:{{{ if .Build.X86 }}}
      - "386"{{{ end }}}
      - "amd64"
      - "arm64"
    mod_timestamp: "{{ .CommitTimestamp }}"{{{ .GoBinaryContent }}}
{{{ if .Build.LinuxARM }}}
  - id: "linux-arm"
    goos:
      - "linux"
    goarch:
      - "arm"
    goarm:
      - "5"
      - "6"
      - "7"
    mod_timestamp: "{{ .CommitTimestamp }}"{{{ .GoBinaryContent }}}
{{{ end }}}{{{ if .Build.LinuxMIPS }}}
  - id: "linux-mips"
    goos:
      - "linux"
    goarch:
      - "mips"
      - "mipsle"
      - "mips64"
      - "mips64le"
    gomips:
      - "hardfloat"
      - "softfloat"
    mod_timestamp: "{{ .CommitTimestamp }}"{{{ .GoBinaryContent }}}
{{{ end }}}{{{ if .Build.LinuxOdd }}}
  - id: "linux-odd"
    goos:
      - "linux"
    goarch:
      - "loong64"
      - "ppc64"
      - "ppc64le"
      - "riscv64"
      - "s390x"
    mod_timestamp: "{{ .CommitTimestamp }}"{{{ .GoBinaryContent }}}
{{{ end }}}
  - id: "windows"
    goos:
      - "windows"
    goarch:
      - "amd64"
    mod_timestamp: "{{ .CommitTimestamp }}"{{{ .GoBinaryContent }}}
{{{ if .Build.X86 }}}
  - id: "windows_386"
    goos:
      - "windows"
    goarch:
      - "386"
    mod_timestamp: "{{ .CommitTimestamp }}"{{{ .GoBinaryContent }}}
{{{ end }}}{{{ if .Build.WindowsARM }}}
  - id: "windows-arm"
    goos:
      - "windows"
    goarch:
      - "arm"
      - "arm64"
    goarm:
      - "5"
      - "6"
      - "7"
    mod_timestamp: "{{ .CommitTimestamp }}"{{{ .GoBinaryContent }}}
{{{ end }}}{{{ if .Build.WASM }}}
  - id: "js"
    goos:
      - "js"
    goarch:
      - "wasm"
    mod_timestamp: "{{ .CommitTimestamp }}"{{{ .GoBinaryContent }}}
{{{ end }}}{{{ if .Build.AIX }}}
  - id: "aix"
    goos:
      - "aix"
    goarch:
      - "ppc64"
    mod_timestamp: "{{ .CommitTimestamp }}"{{{ .GoBinaryContent }}}
{{{ end }}}{{{ if .Build.Dragonfly }}}
  - id: "dragonfly"
    goos:
      - "dragonfly"
    goarch:
      - "amd64"
    mod_timestamp: "{{ .CommitTimestamp }}"{{{ .GoBinaryContent }}}
{{{ end }}}{{{ if .Build.Illumos }}}
  - id: "illumos"
    goos:
      - "illumos"
    goarch:
      - "amd64"
    mod_timestamp: "{{ .CommitTimestamp }}"{{{ .GoBinaryContent }}}
{{{ end }}}{{{ if .Build.FreeBSD }}}
  - id: "freebsd"
    goos:
      - "freebsd"
    goarch:{{{ if .Build.X86 }}}
      - "386"{{{ end }}}
      - "amd64"
      - "arm"
      - "arm64"
    goarm:
      - "5"
      - "6"
      - "7"
    mod_timestamp: "{{ .CommitTimestamp }}"{{{ .GoBinaryContent }}}
{{{ end }}}{{{ if .Build.NetBSD }}}
  - id: "netbsd"
    goos:
      - "netbsd"
    goarch:{{{ if .Build.X86 }}}
      - "386"{{{ end }}}
      - "amd64"
      - "arm"
      - "arm64"
    goarm:
      - "7"
    mod_timestamp: "{{ .CommitTimestamp }}"{{{ .GoBinaryContent }}}
{{{ end }}}{{{ if .Build.OpenBSD }}}
  - id: "openbsd"
    goos:
      - "openbsd"
    goarch:{{{ if .Build.X86 }}}
      - "386"{{{ end }}}
      - "amd64"
      - "arm"
      - "arm64"
    goarm:
      - "5"
      - "6"
      - "7"
    mod_timestamp: "{{ .CommitTimestamp }}"{{{ .GoBinaryContent }}}
{{{ end }}}{{{ if .Build.Plan9 }}}
  - id: "plan9"
    goos:
      - "plan9"
    goarch:{{{ if .Build.X86 }}}
      - "386"{{{ end }}}
      - "amd64"
      - "arm"
      - "arm64"
    goarm:
      - "5"
      - "6"
      - "7"
    mod_timestamp: "{{ .CommitTimestamp }}"{{{ .GoBinaryContent }}}
{{{ end }}}{{{ if .Build.Solaris }}}
  - id: "solaris"
    goos:
      - "solaris"
    goarch:
      - "amd64"
    mod_timestamp: "{{ .CommitTimestamp }}"{{{ .GoBinaryContent }}}
{{{ end -}}}
{{{ end -}}}
