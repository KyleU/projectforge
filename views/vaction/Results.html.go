// Code generated by qtc from "Results.html". DO NOT EDIT.
// See https://github.com/valyala/quicktemplate for details.

//line views/vaction/Results.html:1
package vaction

//line views/vaction/Results.html:1
import (
	"strings"

	"projectforge.dev/projectforge/app"
	"projectforge.dev/projectforge/app/controller/cutil"
	"projectforge.dev/projectforge/app/project"
	"projectforge.dev/projectforge/app/project/action"
	"projectforge.dev/projectforge/app/util"
	"projectforge.dev/projectforge/views/components"
	"projectforge.dev/projectforge/views/layout"
	"projectforge.dev/projectforge/views/vproject"
)

//line views/vaction/Results.html:14
import (
	qtio422016 "io"

	qt422016 "github.com/valyala/quicktemplate"
)

//line views/vaction/Results.html:14
var (
	_ = qtio422016.Copy
	_ = qt422016.AcquireByteBuffer
)

//line views/vaction/Results.html:14
type Results struct {
	layout.Basic
	T        action.Type
	Cfg      util.ValueMap
	Projects project.Projects
	Ctxs     action.ResultContexts
	Tags     []string
	IsBuild  bool
}

//line views/vaction/Results.html:24
func (p *Results) StreamBody(qw422016 *qt422016.Writer, as *app.State, ps *cutil.PageState) {
//line views/vaction/Results.html:24
	qw422016.N().S(`
`)
//line views/vaction/Results.html:26
	title := p.T.Title
	if phase := p.Cfg.GetStringOpt("phase"); phase != "" {
		title += " [" + phase + "]"
	}

//line views/vaction/Results.html:30
	qw422016.N().S(`  <div class="card">
    `)
//line views/vaction/Results.html:32
	vproject.StreamAvailActions(qw422016, title, p.Tags, p.Projects.Tags(), ps)
//line views/vaction/Results.html:32
	qw422016.N().S(`
  </div>
  <div class="card">
`)
//line views/vaction/Results.html:35
	if p.IsBuild {
//line views/vaction/Results.html:35
		qw422016.N().S(`    `)
//line views/vaction/Results.html:36
		StreamAvailBuildActions(qw422016, p.Tags)
//line views/vaction/Results.html:36
		qw422016.N().S(`
`)
//line views/vaction/Results.html:37
	}
//line views/vaction/Results.html:37
	qw422016.N().S(`    <ul class="accordion">
`)
//line views/vaction/Results.html:39
	for _, x := range p.Ctxs {
//line views/vaction/Results.html:39
		qw422016.N().S(`      <li>
        <input id="accordion-`)
//line views/vaction/Results.html:41
		qw422016.E().S(x.Prj.Key)
//line views/vaction/Results.html:41
		qw422016.N().S(`" type="checkbox" hidden />
        <label for="accordion-`)
//line views/vaction/Results.html:42
		qw422016.E().S(x.Prj.Key)
//line views/vaction/Results.html:42
		qw422016.N().S(`">
          <div class="right">`)
//line views/vaction/Results.html:43
		qw422016.N().S(x.Status())
//line views/vaction/Results.html:43
		if x.Res != nil && len(x.Res.Errors) > 0 {
//line views/vaction/Results.html:43
			qw422016.N().S(` (`)
//line views/vaction/Results.html:43
			qw422016.N().D(len(x.Res.Errors))
//line views/vaction/Results.html:43
			qw422016.N().S(` errors)`)
//line views/vaction/Results.html:43
		}
//line views/vaction/Results.html:43
		qw422016.N().S(`</div>
          `)
//line views/vaction/Results.html:44
		components.StreamExpandCollapse(qw422016, 3, ps)
//line views/vaction/Results.html:44
		qw422016.N().S(` `)
//line views/vaction/Results.html:44
		components.StreamSVGRef(qw422016, x.Prj.IconSafe(), 16, 16, "icon", ps)
//line views/vaction/Results.html:44
		qw422016.N().S(`
          `)
//line views/vaction/Results.html:45
		if x.Prj.Key == util.AppKey {
//line views/vaction/Results.html:45
			qw422016.N().S(`<strong>`)
//line views/vaction/Results.html:45
		}
//line views/vaction/Results.html:45
		qw422016.E().S(x.Prj.Title())
//line views/vaction/Results.html:45
		if x.Prj.Key == util.AppKey {
//line views/vaction/Results.html:45
			qw422016.N().S(`</strong>`)
//line views/vaction/Results.html:45
		}
//line views/vaction/Results.html:45
		qw422016.N().S(`
        </label>
        <div class="bd">
          `)
//line views/vaction/Results.html:48
		vproject.StreamSummary(qw422016, x.Prj, x.Title(), nil, nil, &x.Res.Action, nil, ps)
//line views/vaction/Results.html:48
		qw422016.N().S(`
          `)
//line views/vaction/Results.html:49
		StreamDetail(qw422016, x.Cfg, x.Res, false, as, ps)
//line views/vaction/Results.html:49
		qw422016.N().S(`
        </div>
      </li>
`)
//line views/vaction/Results.html:52
	}
//line views/vaction/Results.html:52
	qw422016.N().S(`    </ul>
  </div>
`)
//line views/vaction/Results.html:55
}

//line views/vaction/Results.html:55
func (p *Results) WriteBody(qq422016 qtio422016.Writer, as *app.State, ps *cutil.PageState) {
//line views/vaction/Results.html:55
	qw422016 := qt422016.AcquireWriter(qq422016)
//line views/vaction/Results.html:55
	p.StreamBody(qw422016, as, ps)
//line views/vaction/Results.html:55
	qt422016.ReleaseWriter(qw422016)
//line views/vaction/Results.html:55
}

//line views/vaction/Results.html:55
func (p *Results) Body(as *app.State, ps *cutil.PageState) string {
//line views/vaction/Results.html:55
	qb422016 := qt422016.AcquireByteBuffer()
//line views/vaction/Results.html:55
	p.WriteBody(qb422016, as, ps)
//line views/vaction/Results.html:55
	qs422016 := string(qb422016.B)
//line views/vaction/Results.html:55
	qt422016.ReleaseByteBuffer(qb422016)
//line views/vaction/Results.html:55
	return qs422016
//line views/vaction/Results.html:55
}

//line views/vaction/Results.html:57
func StreamAvailBuildActions(qw422016 *qt422016.Writer, currTags []string) {
//line views/vaction/Results.html:57
	qw422016.N().S(`
`)
//line views/vaction/Results.html:59
	var tags string
	if len(currTags) > 0 {
		tags = "&tags=" + strings.Join(currTags, ",")
	}

//line views/vaction/Results.html:63
	qw422016.N().S(`  <table class="min-200">
    <thead>
      <tr>
        <th class="shrink">Build Action</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
`)
//line views/vaction/Results.html:72
	for _, b := range action.AllBuilds {
//line views/vaction/Results.html:72
		qw422016.N().S(`      <tr>
        <td><a href="/run/build?phase=`)
//line views/vaction/Results.html:74
		qw422016.E().S(b.Key)
//line views/vaction/Results.html:74
		qw422016.E().S(tags)
//line views/vaction/Results.html:74
		qw422016.N().S(`" title="`)
//line views/vaction/Results.html:74
		qw422016.E().S(b.Description)
//line views/vaction/Results.html:74
		qw422016.N().S(`"><button>`)
//line views/vaction/Results.html:74
		qw422016.E().S(b.Title)
//line views/vaction/Results.html:74
		qw422016.N().S(`</button></a></td>
        <td>`)
//line views/vaction/Results.html:75
		qw422016.E().S(b.Description)
//line views/vaction/Results.html:75
		qw422016.N().S(`</td>
      </tr>
`)
//line views/vaction/Results.html:77
	}
//line views/vaction/Results.html:77
	qw422016.N().S(`    </tbody>
  </table>
`)
//line views/vaction/Results.html:80
}

//line views/vaction/Results.html:80
func WriteAvailBuildActions(qq422016 qtio422016.Writer, currTags []string) {
//line views/vaction/Results.html:80
	qw422016 := qt422016.AcquireWriter(qq422016)
//line views/vaction/Results.html:80
	StreamAvailBuildActions(qw422016, currTags)
//line views/vaction/Results.html:80
	qt422016.ReleaseWriter(qw422016)
//line views/vaction/Results.html:80
}

//line views/vaction/Results.html:80
func AvailBuildActions(currTags []string) string {
//line views/vaction/Results.html:80
	qb422016 := qt422016.AcquireByteBuffer()
//line views/vaction/Results.html:80
	WriteAvailBuildActions(qb422016, currTags)
//line views/vaction/Results.html:80
	qs422016 := string(qb422016.B)
//line views/vaction/Results.html:80
	qt422016.ReleaseByteBuffer(qb422016)
//line views/vaction/Results.html:80
	return qs422016
//line views/vaction/Results.html:80
}
