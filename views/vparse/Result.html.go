// Code generated by qtc from "Result.html". DO NOT EDIT.
// See https://github.com/valyala/quicktemplate for details.

//line views/vparse/Result.html:1
package vparse

//line views/vparse/Result.html:1
import (
	"projectforge.dev/projectforge/app"
	"projectforge.dev/projectforge/app/controller/cutil"
	"projectforge.dev/projectforge/app/project/export/datschema"
	"projectforge.dev/projectforge/views/components"
	"projectforge.dev/projectforge/views/layout"
)

//line views/vparse/Result.html:9
import (
	qtio422016 "io"

	qt422016 "github.com/valyala/quicktemplate"
)

//line views/vparse/Result.html:9
var (
	_ = qtio422016.Copy
	_ = qt422016.AcquireByteBuffer
)

//line views/vparse/Result.html:9
type Result struct {
	layout.Basic
	Schema *datschema.Schema
}

//line views/vparse/Result.html:14
func (p *Result) StreamBody(qw422016 *qt422016.Writer, as *app.State, ps *cutil.PageState) {
//line views/vparse/Result.html:14
	qw422016.N().S(`
  <div class="card">
    <h3>`)
//line views/vparse/Result.html:16
	components.StreamSVGRefIcon(qw422016, `cog`, ps)
//line views/vparse/Result.html:16
	qw422016.N().S(`Parse Result</h3>
    <div class="overflow full-width">
      <table class="mt min-200">
        <tbody>
          <tr>
            <th class="shrink">Version</th>
            <td>`)
//line views/vparse/Result.html:22
	qw422016.N().D(p.Schema.Version)
//line views/vparse/Result.html:22
	qw422016.N().S(`</td>
          </tr>
          <tr>
            <th>Created At</th>
            <td>`)
//line views/vparse/Result.html:26
	qw422016.N().D(p.Schema.CreatedAt)
//line views/vparse/Result.html:26
	qw422016.N().S(`</td>
          </tr>
        </tbody>
      </table>
    </div>
  </div>
  <div class="card">
    <h3>`)
//line views/vparse/Result.html:33
	components.StreamSVGRefIcon(qw422016, `cog`, ps)
//line views/vparse/Result.html:33
	qw422016.N().S(`Tables</h3>
    <ul class="accordion">
`)
//line views/vparse/Result.html:35
	for _, t := range p.Schema.Tables {
//line views/vparse/Result.html:35
		qw422016.N().S(`      <li>
        <input id="table-`)
//line views/vparse/Result.html:37
		qw422016.E().S(t.Name)
//line views/vparse/Result.html:37
		qw422016.N().S(`" type="checkbox" hidden />
        <label for="table-`)
//line views/vparse/Result.html:38
		qw422016.E().S(t.Name)
//line views/vparse/Result.html:38
		qw422016.N().S(`">
          `)
//line views/vparse/Result.html:39
		components.StreamExpandCollapse(qw422016, 3, ps)
//line views/vparse/Result.html:39
		qw422016.E().S(t.Name)
//line views/vparse/Result.html:39
		qw422016.N().S(`
        </label>
        <div class="bd">
          <div class="wrapper">
            <div class="padded">
              `)
//line views/vparse/Result.html:44
		streamrenderTable(qw422016, t, ps)
//line views/vparse/Result.html:44
		qw422016.N().S(`
            </div>
          </div>
        </div>
      </li>
`)
//line views/vparse/Result.html:49
	}
//line views/vparse/Result.html:49
	qw422016.N().S(`    </ul>
  </div>
  <div class="card">
    <h3>`)
//line views/vparse/Result.html:53
	components.StreamSVGRefIcon(qw422016, `cog`, ps)
//line views/vparse/Result.html:53
	qw422016.N().S(`Enums</h3>
    <ul class="accordion">
`)
//line views/vparse/Result.html:55
	for _, e := range p.Schema.Enumerations {
//line views/vparse/Result.html:55
		qw422016.N().S(`      <li>
        <input id="enum-`)
//line views/vparse/Result.html:57
		qw422016.E().S(e.Name)
//line views/vparse/Result.html:57
		qw422016.N().S(`" type="checkbox" hidden />
        <label for="enum-`)
//line views/vparse/Result.html:58
		qw422016.E().S(e.Name)
//line views/vparse/Result.html:58
		qw422016.N().S(`">
          `)
//line views/vparse/Result.html:59
		components.StreamExpandCollapse(qw422016, 3, ps)
//line views/vparse/Result.html:59
		qw422016.E().S(e.Name)
//line views/vparse/Result.html:59
		qw422016.N().S(`
        </label>
        <div class="bd">
          <div class="wrapper">
            <div class="padded">
              `)
//line views/vparse/Result.html:64
		streamrenderEnum(qw422016, e, ps)
//line views/vparse/Result.html:64
		qw422016.N().S(`
            </div>
          </div>
        </div>
      </li>
`)
//line views/vparse/Result.html:69
	}
//line views/vparse/Result.html:69
	qw422016.N().S(`    </ul>
  </div>
`)
//line views/vparse/Result.html:72
}

//line views/vparse/Result.html:72
func (p *Result) WriteBody(qq422016 qtio422016.Writer, as *app.State, ps *cutil.PageState) {
//line views/vparse/Result.html:72
	qw422016 := qt422016.AcquireWriter(qq422016)
//line views/vparse/Result.html:72
	p.StreamBody(qw422016, as, ps)
//line views/vparse/Result.html:72
	qt422016.ReleaseWriter(qw422016)
//line views/vparse/Result.html:72
}

//line views/vparse/Result.html:72
func (p *Result) Body(as *app.State, ps *cutil.PageState) string {
//line views/vparse/Result.html:72
	qb422016 := qt422016.AcquireByteBuffer()
//line views/vparse/Result.html:72
	p.WriteBody(qb422016, as, ps)
//line views/vparse/Result.html:72
	qs422016 := string(qb422016.B)
//line views/vparse/Result.html:72
	qt422016.ReleaseByteBuffer(qb422016)
//line views/vparse/Result.html:72
	return qs422016
//line views/vparse/Result.html:72
}

//line views/vparse/Result.html:74
func streamrenderTable(qw422016 *qt422016.Writer, t *datschema.Table, ps *cutil.PageState) {
//line views/vparse/Result.html:74
	qw422016.N().S(`
  <ul class="accordion">
    <li>
      <input id="table-`)
//line views/vparse/Result.html:77
	qw422016.E().S(t.Name)
//line views/vparse/Result.html:77
	qw422016.N().S(`-columns" type="checkbox" hidden />
      <label for="table-`)
//line views/vparse/Result.html:78
	qw422016.E().S(t.Name)
//line views/vparse/Result.html:78
	qw422016.N().S(`-columns">
        `)
//line views/vparse/Result.html:79
	components.StreamExpandCollapse(qw422016, 3, ps)
//line views/vparse/Result.html:79
	qw422016.N().S(` `)
//line views/vparse/Result.html:79
	qw422016.N().D(len(t.Columns))
//line views/vparse/Result.html:79
	qw422016.N().S(` Columns
      </label>
      <div class="bd">
        <div class="wrapper">
          <div class="padded">
            <table class="min-200">
              <thead>
                <tr>
                  <th>Name</th>
                  <th>Description</th>
                  <th>Array</th>
                  <th>Type</th>
                  <th>Unique</th>
                  <th>Localized</th>
                  <th>References</th>
                  <th>Until</th>
                  <th>File</th>
                  <th>Files</th>
                </tr>
              </thead>
              <tbody>
`)
//line views/vparse/Result.html:100
	for _, col := range t.Columns {
//line views/vparse/Result.html:100
		qw422016.N().S(`                <tr>
                  <td>`)
//line views/vparse/Result.html:102
		qw422016.E().S(col.SafeName())
//line views/vparse/Result.html:102
		qw422016.N().S(`</td>
                  <td>`)
//line views/vparse/Result.html:103
		qw422016.E().S(col.Description)
//line views/vparse/Result.html:103
		qw422016.N().S(`</td>
                  <td>`)
//line views/vparse/Result.html:104
		qw422016.E().V(col.Array)
//line views/vparse/Result.html:104
		qw422016.N().S(`</td>
                  <td>`)
//line views/vparse/Result.html:105
		qw422016.E().S(col.Type)
//line views/vparse/Result.html:105
		qw422016.N().S(`</td>
                  <td>`)
//line views/vparse/Result.html:106
		qw422016.E().V(col.Unique)
//line views/vparse/Result.html:106
		qw422016.N().S(`</td>
                  <td>`)
//line views/vparse/Result.html:107
		qw422016.E().V(col.Localized)
//line views/vparse/Result.html:107
		qw422016.N().S(`</td>
                  <td>`)
//line views/vparse/Result.html:108
		qw422016.E().V(col.References)
//line views/vparse/Result.html:108
		qw422016.N().S(`</td>
                  <td>`)
//line views/vparse/Result.html:109
		qw422016.E().V(col.Until)
//line views/vparse/Result.html:109
		qw422016.N().S(`</td>
                  <td>`)
//line views/vparse/Result.html:110
		qw422016.E().V(col.File)
//line views/vparse/Result.html:110
		qw422016.N().S(`</td>
                  <td>`)
//line views/vparse/Result.html:111
		qw422016.E().V(col.Files)
//line views/vparse/Result.html:111
		qw422016.N().S(`</td>
                </tr>
`)
//line views/vparse/Result.html:113
	}
//line views/vparse/Result.html:113
	qw422016.N().S(`              </tbody>
            </table>
          </div>
        </div>
      </div>
    </li>
  </ul>
`)
//line views/vparse/Result.html:121
}

//line views/vparse/Result.html:121
func writerenderTable(qq422016 qtio422016.Writer, t *datschema.Table, ps *cutil.PageState) {
//line views/vparse/Result.html:121
	qw422016 := qt422016.AcquireWriter(qq422016)
//line views/vparse/Result.html:121
	streamrenderTable(qw422016, t, ps)
//line views/vparse/Result.html:121
	qt422016.ReleaseWriter(qw422016)
//line views/vparse/Result.html:121
}

//line views/vparse/Result.html:121
func renderTable(t *datschema.Table, ps *cutil.PageState) string {
//line views/vparse/Result.html:121
	qb422016 := qt422016.AcquireByteBuffer()
//line views/vparse/Result.html:121
	writerenderTable(qb422016, t, ps)
//line views/vparse/Result.html:121
	qs422016 := string(qb422016.B)
//line views/vparse/Result.html:121
	qt422016.ReleaseByteBuffer(qb422016)
//line views/vparse/Result.html:121
	return qs422016
//line views/vparse/Result.html:121
}

//line views/vparse/Result.html:123
func streamrenderEnum(qw422016 *qt422016.Writer, e *datschema.Enumeration, ps *cutil.PageState) {
//line views/vparse/Result.html:123
	qw422016.N().S(`
  <ul class="accordion">
    <li>
      <input id="table-`)
//line views/vparse/Result.html:126
	qw422016.E().S(e.Name)
//line views/vparse/Result.html:126
	qw422016.N().S(`-enums" type="checkbox" hidden />
      <label for="table-`)
//line views/vparse/Result.html:127
	qw422016.E().S(e.Name)
//line views/vparse/Result.html:127
	qw422016.N().S(`-enums">
        `)
//line views/vparse/Result.html:128
	components.StreamExpandCollapse(qw422016, 3, ps)
//line views/vparse/Result.html:128
	qw422016.N().S(` `)
//line views/vparse/Result.html:128
	qw422016.N().D(len(e.Enumerators))
//line views/vparse/Result.html:128
	qw422016.N().S(` Values
      </label>
      <div class="bd">
        <div class="wrapper">
          <div class="padded">
            <table class="min-200">
              <thead>
                <tr>
                  <th>Name</th>
                </tr>
              </thead>
              <tbody>
`)
//line views/vparse/Result.html:140
	for _, x := range e.Enumerators {
//line views/vparse/Result.html:140
		qw422016.N().S(`                <tr>
                  <td>`)
//line views/vparse/Result.html:142
		qw422016.E().S(x)
//line views/vparse/Result.html:142
		qw422016.N().S(`</td>
                </tr>
`)
//line views/vparse/Result.html:144
	}
//line views/vparse/Result.html:144
	qw422016.N().S(`              </tbody>
            </table>
          </div>
        </div>
      </div>
    </li>
  </ul>
`)
//line views/vparse/Result.html:152
}

//line views/vparse/Result.html:152
func writerenderEnum(qq422016 qtio422016.Writer, e *datschema.Enumeration, ps *cutil.PageState) {
//line views/vparse/Result.html:152
	qw422016 := qt422016.AcquireWriter(qq422016)
//line views/vparse/Result.html:152
	streamrenderEnum(qw422016, e, ps)
//line views/vparse/Result.html:152
	qt422016.ReleaseWriter(qw422016)
//line views/vparse/Result.html:152
}

//line views/vparse/Result.html:152
func renderEnum(e *datschema.Enumeration, ps *cutil.PageState) string {
//line views/vparse/Result.html:152
	qb422016 := qt422016.AcquireByteBuffer()
//line views/vparse/Result.html:152
	writerenderEnum(qb422016, e, ps)
//line views/vparse/Result.html:152
	qs422016 := string(qb422016.B)
//line views/vparse/Result.html:152
	qt422016.ReleaseByteBuffer(qb422016)
//line views/vparse/Result.html:152
	return qs422016
//line views/vparse/Result.html:152
}
