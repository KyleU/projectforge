// Code generated by qtc from "Table.html". DO NOT EDIT.
// See https://github.com/valyala/quicktemplate for details.

//line views/vmodule/Table.html:1
package vmodule

//line views/vmodule/Table.html:1
import (
	"projectforge.dev/projectforge/app"
	"projectforge.dev/projectforge/app/controller/cutil"
	"projectforge.dev/projectforge/app/module"
	"projectforge.dev/projectforge/app/util"
	"projectforge.dev/projectforge/views/components"
)

//line views/vmodule/Table.html:9
import (
	qtio422016 "io"

	qt422016 "github.com/valyala/quicktemplate"
)

//line views/vmodule/Table.html:9
var (
	_ = qtio422016.Copy
	_ = qt422016.AcquireByteBuffer
)

//line views/vmodule/Table.html:9
func StreamTable(qw422016 *qt422016.Writer, mods module.Modules, full bool, dir string, as *app.State, ps *cutil.PageState) {
//line views/vmodule/Table.html:9
	qw422016.N().S(`
  <div class="card">
`)
//line views/vmodule/Table.html:11
	if dir != "" {
//line views/vmodule/Table.html:11
		qw422016.N().S(`    <div class="right"><em>`)
//line views/vmodule/Table.html:12
		qw422016.E().S(dir)
//line views/vmodule/Table.html:12
		qw422016.N().S(`</em></div>
`)
//line views/vmodule/Table.html:13
	}
//line views/vmodule/Table.html:13
	qw422016.N().S(`    <h3><a href="/m">`)
//line views/vmodule/Table.html:14
	components.StreamSVGIcon(qw422016, `archive`, ps)
//line views/vmodule/Table.html:14
	qw422016.N().S(`</a> <a href="/m">`)
//line views/vmodule/Table.html:14
	qw422016.E().S(util.StringPlural(len(mods), "Available Module"))
//line views/vmodule/Table.html:14
	qw422016.N().S(`</a></h3>
    <div class="overflow full-width">
      <table class="mt min-200">
`)
//line views/vmodule/Table.html:17
	if full {
//line views/vmodule/Table.html:17
		qw422016.N().S(`        <thead>
          <tr>
            <th class="shrink">Title</th>
            <th>Description</th>
          </tr>
        </thead>
`)
//line views/vmodule/Table.html:24
	}
//line views/vmodule/Table.html:24
	qw422016.N().S(`        <tbody>
`)
//line views/vmodule/Table.html:26
	for _, mod := range mods {
//line views/vmodule/Table.html:26
		qw422016.N().S(`          <tr>
            <td class="shrink">
              <a href="/m/`)
//line views/vmodule/Table.html:29
		qw422016.E().S(mod.Key)
//line views/vmodule/Table.html:29
		qw422016.N().S(`">`)
//line views/vmodule/Table.html:29
		components.StreamSVGRef(qw422016, mod.IconSafe(), 16, 16, "icon", ps)
//line views/vmodule/Table.html:29
		qw422016.N().S(`</a>
              <a href="/m/`)
//line views/vmodule/Table.html:30
		qw422016.E().S(mod.Key)
//line views/vmodule/Table.html:30
		qw422016.N().S(`">`)
//line views/vmodule/Table.html:30
		qw422016.E().S(mod.Title())
//line views/vmodule/Table.html:30
		qw422016.N().S(`</a>
            </td>
            <td>`)
//line views/vmodule/Table.html:32
		qw422016.E().S(mod.Description)
//line views/vmodule/Table.html:32
		qw422016.N().S(`</td>
          </tr>
`)
//line views/vmodule/Table.html:34
	}
//line views/vmodule/Table.html:34
	qw422016.N().S(`        </tbody>
      </table>
    </div>
  </div>
`)
//line views/vmodule/Table.html:39
}

//line views/vmodule/Table.html:39
func WriteTable(qq422016 qtio422016.Writer, mods module.Modules, full bool, dir string, as *app.State, ps *cutil.PageState) {
//line views/vmodule/Table.html:39
	qw422016 := qt422016.AcquireWriter(qq422016)
//line views/vmodule/Table.html:39
	StreamTable(qw422016, mods, full, dir, as, ps)
//line views/vmodule/Table.html:39
	qt422016.ReleaseWriter(qw422016)
//line views/vmodule/Table.html:39
}

//line views/vmodule/Table.html:39
func Table(mods module.Modules, full bool, dir string, as *app.State, ps *cutil.PageState) string {
//line views/vmodule/Table.html:39
	qb422016 := qt422016.AcquireByteBuffer()
//line views/vmodule/Table.html:39
	WriteTable(qb422016, mods, full, dir, as, ps)
//line views/vmodule/Table.html:39
	qs422016 := string(qb422016.B)
//line views/vmodule/Table.html:39
	qt422016.ReleaseByteBuffer(qb422016)
//line views/vmodule/Table.html:39
	return qs422016
//line views/vmodule/Table.html:39
}
