// Code generated by qtc from "Home.html". DO NOT EDIT.
// See https://github.com/valyala/quicktemplate for details.

// <!-- $PF_IGNORE$ -->

//line views/Home.html:2
package views

//line views/Home.html:2
import (
	"projectforge.dev/projectforge/app"
	"projectforge.dev/projectforge/app/controller/cutil"
	"projectforge.dev/projectforge/app/module"
	"projectforge.dev/projectforge/app/project"
	"projectforge.dev/projectforge/app/util"
	"projectforge.dev/projectforge/views/components"
	"projectforge.dev/projectforge/views/layout"
	"projectforge.dev/projectforge/views/vmodule"
	"projectforge.dev/projectforge/views/vproject"
)

//line views/Home.html:14
import (
	qtio422016 "io"

	qt422016 "github.com/valyala/quicktemplate"
)

//line views/Home.html:14
var (
	_ = qtio422016.Copy
	_ = qt422016.AcquireByteBuffer
)

//line views/Home.html:14
type Home struct {
	layout.Basic
	Projects project.Projects
	Modules  module.Modules
}

//line views/Home.html:20
func (p *Home) StreamBody(qw422016 *qt422016.Writer, as *app.State, ps *cutil.PageState) {
//line views/Home.html:20
	qw422016.N().S(`
  <div class="card">
    <h3>`)
//line views/Home.html:22
	components.StreamSVGRefIcon(qw422016, `app`, ps)
//line views/Home.html:22
	qw422016.E().S(util.AppName)
//line views/Home.html:22
	qw422016.N().S(`</h3>
    <div class="mt">
      <div>Project Forge manages web projects written in the Go language.</div>
      <p><em>Using code generation, the latest technology, and a strong standard library, Project Forge will manage your project's code, assets, UI and UX.</em></p>
      <a href="/about"><button>Learn More</button></a>
    </div>
  </div>
  `)
//line views/Home.html:29
	vproject.StreamTable(qw422016, p.Projects, false, as, ps)
//line views/Home.html:29
	qw422016.N().S(`
  `)
//line views/Home.html:30
	vmodule.StreamTable(qw422016, p.Modules, false, as, ps)
//line views/Home.html:30
	qw422016.N().S(`
`)
//line views/Home.html:31
}

//line views/Home.html:31
func (p *Home) WriteBody(qq422016 qtio422016.Writer, as *app.State, ps *cutil.PageState) {
//line views/Home.html:31
	qw422016 := qt422016.AcquireWriter(qq422016)
//line views/Home.html:31
	p.StreamBody(qw422016, as, ps)
//line views/Home.html:31
	qt422016.ReleaseWriter(qw422016)
//line views/Home.html:31
}

//line views/Home.html:31
func (p *Home) Body(as *app.State, ps *cutil.PageState) string {
//line views/Home.html:31
	qb422016 := qt422016.AcquireByteBuffer()
//line views/Home.html:31
	p.WriteBody(qb422016, as, ps)
//line views/Home.html:31
	qs422016 := string(qb422016.B)
//line views/Home.html:31
	qt422016.ReleaseByteBuffer(qb422016)
//line views/Home.html:31
	return qs422016
//line views/Home.html:31
}
