// Code generated by qtc from "IconPicker.html". DO NOT EDIT.
// See https://github.com/valyala/quicktemplate for details.

//line views/components/IconPicker.html:1
package components

//line views/components/IconPicker.html:1
import "github.com/kyleu/projectforge/app/controller/cutil"

//line views/components/IconPicker.html:2
import "github.com/kyleu/projectforge/app/util"

//line views/components/IconPicker.html:3
import "github.com/kyleu/projectforge/views/vutil"

//line views/components/IconPicker.html:5
import (
	qtio422016 "io"

	qt422016 "github.com/valyala/quicktemplate"
)

//line views/components/IconPicker.html:5
var (
	_ = qtio422016.Copy
	_ = qt422016.AcquireByteBuffer
)

//line views/components/IconPicker.html:5
func StreamIconPicker(qw422016 *qt422016.Writer, selected string, name string, ps *cutil.PageState, indent int) {
//line views/components/IconPicker.html:6
	vutil.StreamIndent(qw422016, true, indent)
//line views/components/IconPicker.html:6
	qw422016.N().S(`<div class="choice">`)
//line views/components/IconPicker.html:8
	for _, k := range util.SVGIconKeys {
//line views/components/IconPicker.html:9
		vutil.StreamIndent(qw422016, true, indent+1)
//line views/components/IconPicker.html:9
		qw422016.N().S(`<label title="`)
//line views/components/IconPicker.html:10
		qw422016.E().S(k)
//line views/components/IconPicker.html:10
		qw422016.N().S(`">`)
//line views/components/IconPicker.html:11
		if k == selected {
//line views/components/IconPicker.html:11
			qw422016.N().S(`<input type="radio" name="`)
//line views/components/IconPicker.html:12
			qw422016.E().S(name)
//line views/components/IconPicker.html:12
			qw422016.N().S(`" value="`)
//line views/components/IconPicker.html:12
			qw422016.E().S(k)
//line views/components/IconPicker.html:12
			qw422016.N().S(`" checked="checked" />`)
//line views/components/IconPicker.html:13
		} else {
//line views/components/IconPicker.html:13
			qw422016.N().S(`<input type="radio" name="`)
//line views/components/IconPicker.html:14
			qw422016.E().S(name)
//line views/components/IconPicker.html:14
			qw422016.N().S(`" value="`)
//line views/components/IconPicker.html:14
			qw422016.E().S(k)
//line views/components/IconPicker.html:14
			qw422016.N().S(`" />`)
//line views/components/IconPicker.html:15
		}
//line views/components/IconPicker.html:16
		qw422016.N().S(` `)
//line views/components/IconPicker.html:17
		StreamSVGRef(qw422016, k, 48, 48, "", ps)
//line views/components/IconPicker.html:17
		qw422016.N().S(`</label>`)
//line views/components/IconPicker.html:19
	}
//line views/components/IconPicker.html:20
	vutil.StreamIndent(qw422016, true, indent)
//line views/components/IconPicker.html:20
	qw422016.N().S(`</div>`)
//line views/components/IconPicker.html:22
}

//line views/components/IconPicker.html:22
func WriteIconPicker(qq422016 qtio422016.Writer, selected string, name string, ps *cutil.PageState, indent int) {
//line views/components/IconPicker.html:22
	qw422016 := qt422016.AcquireWriter(qq422016)
//line views/components/IconPicker.html:22
	StreamIconPicker(qw422016, selected, name, ps, indent)
//line views/components/IconPicker.html:22
	qt422016.ReleaseWriter(qw422016)
//line views/components/IconPicker.html:22
}

//line views/components/IconPicker.html:22
func IconPicker(selected string, name string, ps *cutil.PageState, indent int) string {
//line views/components/IconPicker.html:22
	qb422016 := qt422016.AcquireByteBuffer()
//line views/components/IconPicker.html:22
	WriteIconPicker(qb422016, selected, name, ps, indent)
//line views/components/IconPicker.html:22
	qs422016 := string(qb422016.B)
//line views/components/IconPicker.html:22
	qt422016.ReleaseByteBuffer(qb422016)
//line views/components/IconPicker.html:22
	return qs422016
//line views/components/IconPicker.html:22
}
